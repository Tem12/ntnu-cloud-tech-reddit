name: Github Action for Deployment
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install-dependencies:
    runs-on: [ubuntu-latest, ubuntu-20.04]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt
    
  test:
    runs-on: [ubuntu-latest, ubuntu-20.04]
    needs: install-dependencies
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        options: >-
          # Set health checks to wait until postgresql is ready
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: reddit
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          # Set health checks to wait until redis is ready
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create .env
        run: |
          echo "DB_URL=postgresql://postgres:postgres@localhost:5432/reddit\nJWT_SECRET=secret" > .env
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Install node js dependencies
        run: |
          cd frontend && npm install -g yarn
          cd frontend && npm install -g typescript
          cd frontend && yarn install
      
      - name: Seed database and cache
        run: make seed

      - name: Build all services
        run: make build

      - name: Test api and cache services
        run: make test
          
